name: Deploy API Gateway with OpenAPI

on:
  push:
    branches:
      - main

jobs:
  create-api-gateway:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Update API Contract with dynamic values
        run: |
          ls
          sed -i 's|<LOAD_BALANCER_URI>|${{ secrets.LOAD_BALANCER_URI }}|g' ./api_contract.yaml
          sed -i 's|<VPC_LINK_ID>|${{ secrets.VPC_LINK_ID }}|g' ./api_contract.yaml
          sed -i 's|<LAMBDA_AUTH_ARN>|${{ secrets.LAMBDA_AUTH_ARN }}|g' ./api_contract.yaml
          cat ./api_contract.yaml

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }} 
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }} 
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_stage: prod
        run: terraform plan

      - name: Terraform Apply
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_stage: prod
        run: terraform apply -auto-approve